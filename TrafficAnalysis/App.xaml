<Application x:Class="TrafficAnalysis.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:a="clr-namespace:TrafficAnalysis"
             xmlns:aui="clr-namespace:TrafficAnalysis.UI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="BigFont" TargetType="Label">
            <Setter Property="FontSize" Value="38" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="DeviceList" TargetType="{x:Type ListBox}">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=FriendlyName}" FontWeight="Bold" />
                            <TextBlock Text="{Binding Path=Description}" Margin="10 0 0 0" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Base TabItem style -->
        <Style x:Key="CaptionStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="2,0,2,0" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        </Style>

        <Style x:Key="TabItemBase" TargetType="TabItem">
            <Style.Resources>
                <CornerRadius x:Key="TabHeaderCornerRadius">2,2,0,0</CornerRadius>

                <system:Double x:Key="TabHeaderSize">24</system:Double>

                <SolidColorBrush x:Key="ActiveSelected" Color="White" />
            </Style.Resources>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">

                        <Border Name="OutterBorder"
                              Height="{DynamicResource TabHeaderSize}"
                              BorderThickness="1" BorderBrush="Transparent"
                              Background="Transparent"
                              CornerRadius="{DynamicResource TabHeaderCornerRadius}"
                              Margin="{TemplateBinding Margin}" MinWidth="20">

                            <Grid x:Name="InnerGrid" UseLayoutRounding="True" VerticalAlignment="Center" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Image x:Name="TabIcon"
                                     Width="20"
                                     Height="20"
                                     Stretch="None"
                                     Source="{Binding Path=(a:ControlEx.Icon), RelativeSource={RelativeSource TemplatedParent}}"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Margin="4,0,0,0" />

                                <ContentPresenter x:Name="HeaderPresenter"
                                    Grid.Column="1"
                                    TextBlock.Foreground="White"
                                    Content="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Margin="2">

                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionStyle}" />
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>

                            <DataTrigger Binding="{Binding Path=(aui:FlexStackPanel.IsOverflowed), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=(a:ControlEx.Icon), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter TargetName="TabIcon"  Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsMouseOver, ElementName=OutterBorder}" Value="True" />
                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="OutterBorder" Value="#A0fffcf2" />
                                <Setter Property="Background" TargetName="OutterBorder" Value="#40ffe8a6" />
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ActiveSelected}" TargetName="OutterBorder" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ActiveSelected}" TargetName="OutterBorder" />
                                <Setter Property="TextBlock.Foreground" Value="Black" TargetName="HeaderPresenter" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Left">
                                <Setter Property="RenderTransform" TargetName="InnerGrid">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Bottom">
                                <Setter Property="RenderTransform" TargetName="InnerGrid">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Left">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="-90" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Right">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="90" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Bottom">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="180" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- TabControl Style -->
        <Style x:Key="VsTab" TargetType="TabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid Background="#FF334667">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <aui:FlexStackPanel x:Name="TabHeaderPanel" Orientation="Horizontal" IsItemsHost="True" />

                            <Border Grid.Row="1" Grid.ColumnSpan="2" Background="White">
                                <ContentPresenter  ContentSource="SelectedContent" />
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" Value="2" TargetName="TabHeaderPanel" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>